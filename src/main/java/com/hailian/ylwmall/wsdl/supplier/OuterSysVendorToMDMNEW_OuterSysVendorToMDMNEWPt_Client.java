
package com.hailian.ylwmall.wsdl.supplier;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import com.hailian.ylwmall.dto.ProfileDto;
import com.hailian.ylwmall.exception.BusinessException;
import com.hailian.ylwmall.wsdl.buyer.Createplcust2MdmClientEp;
import lombok.extern.slf4j.Slf4j;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.6
 * 2020-05-20T10:38:51.990+08:00
 * Generated source version: 3.3.6
 */
@Slf4j
public final class OuterSysVendorToMDMNEW_OuterSysVendorToMDMNEWPt_Client {

    private static final QName SERVICE_NAME = new QName("http://xmlns.oracle.com/Interface/OuterSysVendorToMDM_NEW/OuterSysVendorToMDM_NEW", "outersysvendortomdm_new_client_ep");

    private OuterSysVendorToMDMNEW_OuterSysVendorToMDMNEWPt_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = OutersysvendortomdmNewClientEp.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        OutersysvendortomdmNewClientEp ss = new OutersysvendortomdmNewClientEp(wsdlURL, SERVICE_NAME);
        OuterSysVendorToMDMNEW port = ss.getOuterSysVendorToMDMNEWPt();

        {
            System.out.println("Invoking process...");
            ObjectFactory factory = new ObjectFactory();
            String _process_inVENDORCODE = "";
            String _process_inVENDORNAME = "衣联网采购002";  // 不能重复
            String _process_inACCOUNTGRPCODE = "1400";
            String _process_inTAXCODE = "1312312317"; // 不能重复
            String _process_inSTREETROOM = "王沙路4号";
            String _process_inPOSTALCODECITY = "153223";
            String _process_inCOUNTRY = "CN";
            String _process_inREGION = "120";
            String _process_inPHONENUMBER = "15610026960";
            String _process_inSUBCOMPANY = "8470";

            HAIERMDMRSPVENDORCOMPANYTYPE companytype = factory.createHAIERMDMRSPVENDORCOMPANYTYPE();
            companytype.setCOMPANYCODE(factory.createHAIERMDMRSPVENDORCOMPANYTYPECOMPANYCODE("8470"));
            companytype.setSEQUENCENO(factory.createHAIERMDMRSPVENDORCOMPANYTYPESEQUENCENO("001"));
            companytype.setPAYMENTTERM(factory.createHAIERMDMRSPVENDORCOMPANYTYPEPAYMENTTERM("0000"));
            companytype.setPAYMENTMETHOD(factory.createHAIERMDMRSPVENDORCOMPANYTYPEPAYMENTMETHOD("I"));

            HAIERMDMRSPVENDORCOMPANYTABLE companyTable = factory.createHAIERMDMRSPVENDORCOMPANYTABLE();
            companyTable.getTVENDORCOMPANYITEM().add(companytype);

            // 银行信息
            HAIERMDMRSPVENDORBANKTYPE bankType = factory.createHAIERMDMRSPVENDORBANKTYPE();
            bankType.setACCOUNTHOLDERNAME(factory.createHAIERMDMRSPVENDORBANKTYPEACCOUNTHOLDERNAME("江苏路支行"));
            bankType.setBANKACCOUNTNUM(factory.createHAIERMDMRSPVENDORBANKTYPEBANKACCOUNTNUM("6217002390010212212"));
            bankType.setBANKCOUNTRY(factory.createHAIERMDMRSPVENDORBANKTYPEBANKCOUNTRY("CN"));
            bankType.setBANKBRANCHCODE(factory.createHAIERMDMRSPVENDORBANKTYPEBANKBRANCHCODE("102241001833"));
            HAIERMDMRSPVENDORBANKTABLE bankTable = factory.createHAIERMDMRSPVENDORBANKTABLE();
            bankTable.getTVENDORBANKITEM().add(bankType);

            HAIERMDMRSPVENDORPURTABLE _process_tVENDORPUR = null;
            HAIERMDMRSPVENDORFINANCETABLE _process_tVENDORFINA = null;
            HAIERMDMRSPVENDORBUSINESSTABLE _process_tVENDORBUNS = null;
            String _process_systemNAME = "S01966";
            String _process_viewBANK = "";
            String _process_viewBASE = "";
            String _process_viewCOMP = "";
            String _process_viewPUR = "";
            String _process_viewFINANCE = "";
            String _process_viewBUSINESS = "";
            String _process_operateTYPE = "CREATE";
            String _process_createdBY = "20010892";
            String _process_legalTYPE = "";
            String _process_billTYPE = "";
            javax.xml.ws.Holder<String> _process_retcode = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_retmsg = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_outROWID = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_outVENDORCODE = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_outTAXCODE = new javax.xml.ws.Holder<String>();
            port.process(_process_inVENDORCODE, _process_inVENDORNAME, _process_inACCOUNTGRPCODE, _process_inTAXCODE, _process_inSTREETROOM, _process_inPOSTALCODECITY, _process_inCOUNTRY, _process_inREGION, _process_inPHONENUMBER, _process_inSUBCOMPANY, companyTable, bankTable, _process_tVENDORPUR, _process_tVENDORFINA, _process_tVENDORBUNS, _process_systemNAME, _process_viewBANK, _process_viewBASE, _process_viewCOMP, _process_viewPUR, _process_viewFINANCE, _process_viewBUSINESS, _process_operateTYPE, _process_createdBY, _process_legalTYPE, _process_billTYPE, _process_retcode, _process_retmsg, _process_outROWID, _process_outVENDORCODE, _process_outTAXCODE);

            System.out.println("process._process_retcode=" + _process_retcode.value);
            System.out.println("process._process_retmsg=" + _process_retmsg.value);
            System.out.println("process._process_outROWID=" + _process_outROWID.value);
            System.out.println("process._process_outVENDORCODE=" + _process_outVENDORCODE.value);
            System.out.println("process._process_outTAXCODE=" + _process_outTAXCODE.value);

        }

        System.exit(0);
    }

    public static Map<String,String> callMdm(ProfileDto dto){
        Map<String, String> resultMap = new HashMap<>();
        URL wsdlURL = OutersysvendortomdmNewClientEp.WSDL_LOCATION;
        OutersysvendortomdmNewClientEp ss = new OutersysvendortomdmNewClientEp(wsdlURL, SERVICE_NAME);
        OuterSysVendorToMDMNEW port = ss.getOuterSysVendorToMDMNEWPt();

        {
            log.info("Invoking process...");
            ObjectFactory factory = new ObjectFactory();
            String _process_inVENDORCODE = "";
            String _process_inVENDORNAME = dto.getCompanyName();  // 不能重复
            String _process_inACCOUNTGRPCODE = "1400";
            String _process_inTAXCODE = dto.getTaxNo(); // 不能重复
            String _process_inSTREETROOM = dto.getDetail();
            String _process_inPOSTALCODECITY = "153223"; // @todo 需要替换成真实的邮编
            String _process_inCOUNTRY = "CN";
            String _process_inREGION = "120"; // @todo 需要替换成真实的区域编号
            String _process_inPHONENUMBER = "15610026960";
            String _process_inSUBCOMPANY = "8470"; // @todo 需要替换成真实的公司编码

            HAIERMDMRSPVENDORCOMPANYTYPE companytype = factory.createHAIERMDMRSPVENDORCOMPANYTYPE();
            companytype.setCOMPANYCODE(factory.createHAIERMDMRSPVENDORCOMPANYTYPECOMPANYCODE("8470"));
            companytype.setSEQUENCENO(factory.createHAIERMDMRSPVENDORCOMPANYTYPESEQUENCENO("001"));
            companytype.setPAYMENTTERM(factory.createHAIERMDMRSPVENDORCOMPANYTYPEPAYMENTTERM("0000"));
            companytype.setPAYMENTMETHOD(factory.createHAIERMDMRSPVENDORCOMPANYTYPEPAYMENTMETHOD("I"));

            HAIERMDMRSPVENDORCOMPANYTABLE companyTable = factory.createHAIERMDMRSPVENDORCOMPANYTABLE();
            companyTable.getTVENDORCOMPANYITEM().add(companytype);

            // 银行信息
            HAIERMDMRSPVENDORBANKTYPE bankType = factory.createHAIERMDMRSPVENDORBANKTYPE();
            bankType.setACCOUNTHOLDERNAME(factory.createHAIERMDMRSPVENDORBANKTYPEACCOUNTHOLDERNAME(dto.getBankName()));
            bankType.setBANKACCOUNTNUM(factory.createHAIERMDMRSPVENDORBANKTYPEBANKACCOUNTNUM(dto.getBankAccNo()));
            bankType.setBANKCOUNTRY(factory.createHAIERMDMRSPVENDORBANKTYPEBANKCOUNTRY("CN"));
            bankType.setBANKBRANCHCODE(factory.createHAIERMDMRSPVENDORBANKTYPEBANKBRANCHCODE(dto.getBankCode()));
            HAIERMDMRSPVENDORBANKTABLE bankTable = factory.createHAIERMDMRSPVENDORBANKTABLE();
            bankTable.getTVENDORBANKITEM().add(bankType);

            HAIERMDMRSPVENDORPURTABLE _process_tVENDORPUR = null;
            HAIERMDMRSPVENDORFINANCETABLE _process_tVENDORFINA = null;
            HAIERMDMRSPVENDORBUSINESSTABLE _process_tVENDORBUNS = null;
            String _process_systemNAME = "S01966";
            String _process_viewBANK = "";
            String _process_viewBASE = "";
            String _process_viewCOMP = "";
            String _process_viewPUR = "";
            String _process_viewFINANCE = "";
            String _process_viewBUSINESS = "";
            String _process_operateTYPE = "CREATE";
            String _process_createdBY = "20010892";
            String _process_legalTYPE = "";
            String _process_billTYPE = "";
            javax.xml.ws.Holder<String> _process_retcode = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_retmsg = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_outROWID = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_outVENDORCODE = new javax.xml.ws.Holder<String>();
            javax.xml.ws.Holder<String> _process_outTAXCODE = new javax.xml.ws.Holder<String>();
            port.process(_process_inVENDORCODE, _process_inVENDORNAME, _process_inACCOUNTGRPCODE, _process_inTAXCODE, _process_inSTREETROOM, _process_inPOSTALCODECITY, _process_inCOUNTRY, _process_inREGION, _process_inPHONENUMBER, _process_inSUBCOMPANY, companyTable, bankTable, _process_tVENDORPUR, _process_tVENDORFINA, _process_tVENDORBUNS, _process_systemNAME, _process_viewBANK, _process_viewBASE, _process_viewCOMP, _process_viewPUR, _process_viewFINANCE, _process_viewBUSINESS, _process_operateTYPE, _process_createdBY, _process_legalTYPE, _process_billTYPE, _process_retcode, _process_retmsg, _process_outROWID, _process_outVENDORCODE, _process_outTAXCODE);

            log.info("process._process_retcode=" + _process_retcode.value);
            log.info("process._process_retmsg=" + _process_retmsg.value);
            log.info("process._process_outROWID=" + _process_outROWID.value);
            log.info("process._process_outVENDORCODE=" + _process_outVENDORCODE.value);
            log.info("process._process_outTAXCODE=" + _process_outTAXCODE.value);
            if("S".equalsIgnoreCase(_process_retcode.value)){
                resultMap.put("retcode", _process_retcode.value);
                resultMap.put("retmsg", _process_retmsg.value);
                resultMap.put("outROWID", _process_outROWID.value);
                resultMap.put("outVENDORCODE", _process_outVENDORCODE.value);
                resultMap.put("outTAXCODE", _process_outTAXCODE.value);
                return resultMap;
            }else{
                log.error("调用mdm未成功: " + _process_retmsg.value);
                throw new BusinessException("调用mdm未成功: ", _process_retmsg.value);
            }
        }
    }

}
