package com.hailian.ylwmall.wsdl.supplier;

import com.hailian.ylwmall.common.SpringContextUtils;
import com.hailian.ylwmall.config.WSDLConfig;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.6
 * 2020-05-20T10:38:52.107+08:00
 * Generated source version: 3.3.6
 *
 */
@WebServiceClient(name = "outersysvendortomdm_new_client_ep",
                  wsdlLocation = "",
                  targetNamespace = "http://xmlns.oracle.com/Interface/OuterSysVendorToMDM_NEW/OuterSysVendorToMDM_NEW")
public class OutersysvendortomdmNewClientEp extends Service {
    static String wsdlUrl = SpringContextUtils.getBean(WSDLConfig .class).getSupplierWSDL(); // "http://10.135.16.46:8001/soa-infra/services/interface/OuterSysVendorToMDM_NEW/outersysvendortomdm_new_client_ep?WSDL";
    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://xmlns.oracle.com/Interface/OuterSysVendorToMDM_NEW/OuterSysVendorToMDM_NEW", "outersysvendortomdm_new_client_ep");
    public final static QName OuterSysVendorToMDMNEWPt = new QName("http://xmlns.oracle.com/Interface/OuterSysVendorToMDM_NEW/OuterSysVendorToMDM_NEW", "OuterSysVendorToMDM_NEW_pt");
    static {
        URL url = null;
        try {
            url = new URL(wsdlUrl);
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(OutersysvendortomdmNewClientEp.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", wsdlUrl);
        }
        WSDL_LOCATION = url;
    }

    public OutersysvendortomdmNewClientEp(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OutersysvendortomdmNewClientEp(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OutersysvendortomdmNewClientEp() {
        super(WSDL_LOCATION, SERVICE);
    }

    public OutersysvendortomdmNewClientEp(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public OutersysvendortomdmNewClientEp(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public OutersysvendortomdmNewClientEp(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns OuterSysVendorToMDMNEW
     */
    @WebEndpoint(name = "OuterSysVendorToMDM_NEW_pt")
    public OuterSysVendorToMDMNEW getOuterSysVendorToMDMNEWPt() {
        return super.getPort(OuterSysVendorToMDMNEWPt, OuterSysVendorToMDMNEW.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OuterSysVendorToMDMNEW
     */
    @WebEndpoint(name = "OuterSysVendorToMDM_NEW_pt")
    public OuterSysVendorToMDMNEW getOuterSysVendorToMDMNEWPt(WebServiceFeature... features) {
        return super.getPort(OuterSysVendorToMDMNEWPt, OuterSysVendorToMDMNEW.class, features);
    }

}
